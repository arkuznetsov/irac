// ----------------------------------------------------------
// This Source Code Form is subject to the terms of the
// Mozilla Public License, v.2.0. If a copy of the MPL
// was not distributed with this file, You can obtain one
// at http://mozilla.org/MPL/2.0/.
// ----------------------------------------------------------
// Codebase: https://github.com/ArKuznetsov/irac/
// ----------------------------------------------------------

Перем Кластер_Агент;       // - УправлениеКластером1С    - родительский объект агента кластера
Перем ПараметрыОбъекта;    // - КомандыОбъекта    - объект-генератор команд объекта кластера
Перем Элементы;            // - ОбъектыКластера   - элементы коллекции объектов кластера

Перем Лог;      // - Логирование     - объект-логгер

// Конструктор
//
// Параметры:
//   АгентКластера       - УправлениеКластером1С    - ссылка на родительский объект агента кластера
//
Процедура ПриСозданииОбъекта(АгентКластера)

	Лог = Служебный.Лог();

	Кластер_Агент = АгентКластера;

	ПараметрыОбъекта = Новый КомандыОбъекта(Кластер_Агент, Перечисления.РежимыАдминистрирования.Кластеры);

	Элементы = Новый ОбъектыКластера(ЭтотОбъект);

КонецПроцедуры // ПриСозданииОбъекта()

// Процедура получает список кластеров от утилиты администрирования кластера 1С
// и сохраняет в локальных переменных
//
// Параметры:
//   РежимОбновления           - Число        - 1 - обновить данные принудительно (вызов RAC)
//                                              0 - обновить данные только по таймеру
//                                             -1 - не обновлять данные
//
Процедура ОбновитьДанные(РежимОбновления = 0) Экспорт

	Если НЕ ТребуетсяОбновление(РежимОбновления) Тогда
		Возврат;
	КонецЕсли;

	ПараметрыКоманды = Новый Соответствие();
	ПараметрыКоманды.Вставить("СтрокаПодключенияАгента"  , Кластер_Агент.СтрокаПодключения());
	
	ПараметрыОбъекта.УстановитьЗначенияПараметровКоманд(ПараметрыКоманды);

	ПараметрыОбъекта.ВыполнитьКоманду("Список");

	МассивРезультатов = Кластер_Агент.ВыводКоманды();

	Если НЕ Кластер_Агент.КодВозврата() = 0 Тогда
		ТекстОшибки = СтрШаблон("Ошибка получения данных кластера ""%1"":", Кластер_Агент.СтрокаПодключения());
		Для Каждого ТекРезультат Из МассивРезультатов[0] Цикл
			ТекстОшибки = СтрШаблон("%1%2%3", ТекстОшибки, Символы.ПС, ТекРезультат.Ключ);
		КонецЦикла;
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(МассивРезультатов) Тогда
		Возврат;
	КонецЕсли;
	
	МассивКластеров = Новый Массив();
	Для Каждого ТекОписание Из МассивРезультатов Цикл
		МассивКластеров.Добавить(Новый Кластер(Кластер_Агент, ТекОписание));
	КонецЦикла;

	Элементы.Заполнить(МассивКластеров);

	Элементы.УстановитьАктуальность();

КонецПроцедуры // ОбновитьДанные()

// Функция признак необходимости обновления данных
//
// Параметры:
//   РежимОбновления           - Число        - 1 - обновить данные принудительно (вызов RAC)
//                                              0 - обновить данные только по таймеру
//                                             -1 - не обновлять данные
//
// Возвращаемое значение:
//    Булево - Истина - требуется обновитьданные
//
Функция ТребуетсяОбновление(РежимОбновления = 0) Экспорт

	Возврат Элементы.ТребуетсяОбновление(РежимОбновления);

КонецФункции // ТребуетсяОбновление()

// Функция возвращает описание параметров объекта
//
// Возвращаемое значение:
//    КомандыОбъекта - описание параметров объекта,
//
Функция ПараметрыОбъекта() Экспорт

	Возврат ПараметрыОбъекта;

КонецФункции // ПараметрыОбъекта()

// Функция возвращает список кластеров 1С
//
// Параметры:
//   Отбор                     - Структура    - Структура отбора кластеров (<поле>:<значение>)
//   РежимОбновления           - Число        - 1 - обновить данные принудительно (вызов RAC)
//                                              0 - обновить данные только по таймеру
//                                             -1 - не обновлять данные
//   ЭлементыКакСоответствия   - Булево,      - Истина - элементы результата будут преобразованы в соответствия
//                               Строка         с именами свойств в качестве ключей
//                                              <Имя поля> - элементы результата будут преобразованы в соответствия
//                                              со значением указанного поля в качестве ключей ("Имя"|"ИмяРАК")
//                                              Ложь - (по умолчанию) элементы будут возвращены как есть
//
// Возвращаемое значение:
//    Массив - список кластеров 1С
//
Функция Список(Отбор = Неопределено, РежимОбновления = 0, ЭлементыКакСоответствия = Ложь) Экспорт

	Возврат Элементы.Список(Отбор, РежимОбновления, ЭлементыКакСоответствия);

КонецФункции // Список()

// Функция возвращает иерархический список кластеров 1С
//
// Параметры:
//   ПоляИерархии              - Строка       - Поля для построения иерархии списка кластеров, разделенные ","
//   РежимОбновления           - Число        - 1 - обновить данные принудительно (вызов RAC)
//                                              0 - обновить данные только по таймеру
//                                             -1 - не обновлять данные
//   ЭлементыКакСоответствия   - Булево,      - Истина - элементы результата будут преобразованы в соответствия
//                               Строка         с именами свойств в качестве ключей
//                                              <Имя поля> - элементы результата будут преобразованы в соответствия
//                                              со значением указанного поля в качестве ключей ("Имя"|"ИмяРАК")
//                                              Ложь - (по умолчанию) элементы будут возвращены как есть
//
// Возвращаемое значение:
//    Соответствие - список кластеров 1С
//        <имя поля объекта>    - Массив(Соответствие), Соответствие    - список кластеров или следующий уровень
//
Функция ИерархическийСписок(Знач ПоляИерархии, РежимОбновления = 0, ЭлементыКакСоответствия = Ложь) Экспорт

	Возврат Элементы.ИерархическийСписок(ПоляИерархии, РежимОбновления, ЭлементыКакСоответствия);

КонецФункции // ИерархическийСписок()

// Функция возвращает количество кластеров в списке
//
// Возвращаемое значение:
//    Число - количество кластеров в списке
//
Функция Количество() Экспорт

	Если Элементы = Неопределено Тогда
		Возврат 0;
	КонецЕсли;
	
	Возврат Элементы.Количество();

КонецФункции // Количество()

// Функция возвращает описание кластера 1С
//
// Параметры:
//   Кластер                 - Строка    - Адрес кластера в виде <сервер>:<порт>
//                                         или идентификатор кластера
//   РежимОбновления         - Число     - 1 - обновить данные принудительно (вызов RAC)
//                                         0 - обновить данные только по таймеру
//                                        -1 - не обновлять данные
//   КакСоответствие         - Булево    - Истина - результат будет преобразован в соответствие
//
// Возвращаемое значение:
//    Соответствие - описание кластера 1С
//
Функция Получить(Знач Кластер, Знач РежимОбновления = 0, КакСоответствие = Ложь) Экспорт

	Отбор = Новый Соответствие();

	Если Служебный.ЭтоGUID(Кластер) Тогда
		Отбор.Вставить("cluster", Кластер);
	Иначе
		АдресКластера = СтрРазделить(Кластер, ":", Ложь);
		Отбор.Вставить("host", СокрЛП(АдресКластера[0]));

		Если АдресКластера.Количество() = 1 Тогда
			Отбор.Вставить("port", 1541);
		Иначе
			Отбор.Вставить("port", Число(СокрЛП(АдресКластера[1])));
		КонецЕсли;
	КонецЕсли;

	СписокКластеров = Элементы.Список(Отбор, РежимОбновления, КакСоответствие);
	
	Если НЕ ЗначениеЗаполнено(СписокКластеров) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат СписокКластеров[0];

КонецФункции // Получить()

// Процедура добавляет новый кластер 1С
//
// Параметры:
//   Имя                  - Строка        - имя кластера 1С
//   АдресСервера         - Строка        - адрес сервера кластера 1С
//   ПортСервера          - Число         - порт сервера кластера 1С
//   ПараметрыКластера    - Структура     - параметры кластера 1С
//
Процедура Добавить(Имя, АдресСервера = "localhost", ПортСервера = 1541, ПараметрыКластера = Неопределено) Экспорт

	Если НЕ ТипЗнч(ПараметрыКластера) = Тип("Структура") Тогда
		ПараметрыКластера = Новый Структура();
	КонецЕсли;

	ПараметрыКоманды = Новый Соответствие();
	ПараметрыКоманды.Вставить("СтрокаПодключенияАгента"   , Кластер_Агент.СтрокаПодключения());
	ПараметрыКоманды.Вставить("ПараметрыАвторизацииАгента", Кластер_Агент.ПараметрыАвторизации());
	ПараметрыКоманды.Вставить("АдресСервера"              , АдресСервера);
	ПараметрыКоманды.Вставить("ПортСервера"               , ПортСервера);
	ПараметрыКоманды.Вставить("Имя"                       , Имя);
	
	Для Каждого ТекЭлемент Из ПараметрыКластера Цикл
		ПараметрыКоманды.Вставить(ТекЭлемент.Ключ, ТекЭлемент.Значение);
	КонецЦикла;

	ПараметрыОбъекта.УстановитьЗначенияПараметровКоманд(ПараметрыКоманды);

	КодВозврата = ПараметрыОбъекта.ВыполнитьКоманду("Добавить");
	ВыводКоманды = Кластер_Агент.ВыводКоманды(Ложь);

	Если НЕ КодВозврата = 0 Тогда
		ТекстОшибки = СтрШаблон("Ошибка добавления кластера ""%1"", КодВозврата = %2:%3%4",
		                        Имя,
		                        КодВозврата,
		                        Символы.ПС,
		                        ВыводКоманды);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;

	Лог.Отладка(ВыводКоманды);

	ОбновитьДанные(Перечисления.РежимыОбновленияДанных.Принудительно);

КонецПроцедуры // Добавить()

// Процедура удаляет кластер 1С
//
// Параметры:
//   Кластер         - Строка       - Адрес кластера в виде <сервер>:<порт>
//
Процедура Удалить(Кластер) Экспорт
	
	ПараметрыКоманды = Новый Соответствие();
	ПараметрыКоманды.Вставить("СтрокаПодключенияАгента"     , Кластер_Агент.СтрокаПодключения());
	ПараметрыКоманды.Вставить("ИдентификаторКластера"       , Получить(Кластер).Ид());
	ПараметрыКоманды.Вставить("ПараметрыАвторизацииКластера", Получить(Кластер).ПараметрыАвторизации());
	
	ПараметрыОбъекта.УстановитьЗначенияПараметровКоманд(ПараметрыКоманды);

	КодВозврата = ПараметрыОбъекта.ВыполнитьКоманду("Удалить");
	ВыводКоманды = Кластер_Агент.ВыводКоманды(Ложь);

	Если НЕ КодВозврата = 0 Тогда
		ТекстОшибки = СтрШаблон("Ошибка удаления кластера ""%1"", КодВозврата = %2:%3%4",
		                        Получить(Кластер).Имя(),
		                        КодВозврата,
		                        Символы.ПС,
		                        ВыводКоманды);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;

	Лог.Отладка(ВыводКоманды);

	ОбновитьДанные(Перечисления.РежимыОбновленияДанных.Принудительно);

КонецПроцедуры // Удалить()
