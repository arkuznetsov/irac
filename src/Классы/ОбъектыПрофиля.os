// ----------------------------------------------------------
// This Source Code Form is subject to the terms of the
// Mozilla Public License, v.2.0. If a copy of the MPL
// was not distributed with this file, You can obtain one
// at http://mozilla.org/MPL/2.0/.
// ----------------------------------------------------------
// Codebase: https://github.com/ArKuznetsov/irac/
// ----------------------------------------------------------

Перем ТипЭлементов;
Перем Кластер_Агент;       // - УправлениеКластером1С    - родительский объект агента кластера
Перем Кластер_Владелец;    // - Кластер                  - родительский объект кластера
Перем Профиль_Владелец;
Перем Элементы;            // - ОбъектыКластера   - элементы коллекции объектов кластера

Перем ПараметрыОбъекта;    // - КомандыОбъекта    - объект-генератор команд объекта кластера

Перем МоментАктуальности;    // - Число    - последний момент получения информации от сервиса RAS
Перем ПериодОбновления;      // - Число    - период обновления информации от сервиса RAS

Перем Лог;      // - Логирование     - объект-логгер

// Конструктор
//
// Параметры:
//   АгентКластера    - УправлениеКластером1С     - ссылка на родительский объект агента кластера
//   Кластер          - Кластер                   - ссылка на родительский объект кластера
//   Профиль          - ПрофильБезопасности       - ссылка на родительский объект кластера
//   Тип              - Перечисления.             - имя типа объекта профиля
//                      ВидыОбъектовПрофиляБезопасности
//
Процедура ПриСозданииОбъекта(АгентКластера, Кластер, Профиль, Тип)

	Лог = Служебный.Лог();

	Кластер_Агент = АгентКластера;
	Кластер_Владелец = Кластер;
	Профиль_Владелец = Профиль;

	ТипЭлементов = Тип;

	ТипОбъектаПрофиля = СтрШаблон("%1.%2",
	                              Перечисления.РежимыАдминистрирования.ПрофилиБезопасности,
	                              ТипЭлементов);
	ПараметрыОбъекта = Новый КомандыОбъекта(Кластер_Агент, ТипОбъектаПрофиля);

	Элементы = Новый ОбъектыКластера(ЭтотОбъект);

КонецПроцедуры // ПриСозданииОбъекта()

// Процедура получает список объектов профиля безопасности от утилиты администрирования кластера 1С
// и сохраняет в локальных переменных
//
// Параметры:
//   РежимОбновления          - Число        - 1 - обновить данные принудительно (вызов RAC)
//                                             0 - обновить данные только по таймеру
//                                            -1 - не обновлять данные
//
Процедура ОбновитьДанные(РежимОбновления = 0) Экспорт

	Если НЕ ТребуетсяОбновление(РежимОбновления) Тогда
		Возврат;
	КонецЕсли;

	ПараметрыКоманды = Новый Соответствие();
	ПараметрыКоманды.Вставить("СтрокаПодключенияАгента"     , Кластер_Агент.СтрокаПодключения());
	ПараметрыКоманды.Вставить("ИдентификаторКластера"       , Кластер_Владелец.Ид());
	ПараметрыКоманды.Вставить("ПараметрыАвторизацииКластера", Кластер_Владелец.ПараметрыАвторизации());
	ПараметрыКоманды.Вставить("ИмяПрофиля"                  , Профиль_Владелец.Имя());
	ПараметрыКоманды.Вставить("ВидОбъектовПрофиля"          , ТипЭлементов);

	ПараметрыОбъекта.УстановитьЗначенияПараметровКоманд(ПараметрыКоманды);

	КодВозврата = ПараметрыОбъекта.ВыполнитьКоманду("Список");
	ВыводКоманды = Кластер_Агент.ВыводКоманды(Ложь);

	Если НЕ КодВозврата = 0 Тогда
		ТекстОшибки = СтрШаблон("Ошибка получения списка доступа объектов ""%1"" профиля ""%2""
		                        | в кластере ""%3"":%4%5",
		                        ТипЭлементов,
		                        Профиль_Владелец.Имя(),
		                        Кластер_Владелец.Имя(),
		                        Символы.ПС,
		                        ВыводКоманды);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;

	МассивРезультатов = Кластер_Агент.ВыводКоманды();

	Лог.Отладка(ВыводКоманды);

	МассивОбъектов = Новый Массив();
	Для Каждого ТекОписание Из МассивРезультатов Цикл
		ТипОбъектаПрофиля = СтрШаблон("%1.%2",
		                              Перечисления.РежимыАдминистрирования.ПрофилиБезопасности,
		                              ТипЭлементов);
		МассивОбъектов.Добавить(Новый ОбъектКластера(Кластер_Агент, Кластер_Владелец, ТипОбъектаПрофиля, ТекОписание));
	КонецЦикла;

	Элементы.Заполнить(МассивОбъектов);

	Элементы.УстановитьАктуальность();

КонецПроцедуры // ОбновитьДанные()

// Функция признак необходимости обновления данных
//
// Параметры:
//   РежимОбновления          - Число        - 1 - обновить данные принудительно (вызов RAC)
//                                             0 - обновить данные только по таймеру
//                                            -1 - не обновлять данные
//
// Возвращаемое значение:
//    Булево - Истина - требуется обновитьданные
//
Функция ТребуетсяОбновление(РежимОбновления = 0) Экспорт

	Возврат Элементы.ТребуетсяОбновление(РежимОбновления);

КонецФункции // ТребуетсяОбновление()

// Функция возвращает описание параметров объекта
//
// Возвращаемое значение:
//    КомандыОбъекта - описание параметров объекта,
//
Функция ПараметрыОбъекта() Экспорт

	Возврат ПараметрыОбъекта;

КонецФункции // ПараметрыОбъекта()

// Функция возвращает список объектов кластера
//
// Параметры:
//   Отбор                    - Структура    - Структура отбора объектов (<поле>:<значение>)
//   РежимОбновления          - Число        - 1 - обновить данные принудительно (вызов RAC)
//                                             0 - обновить данные только по таймеру
//                                            -1 - не обновлять данные
//   ЭлементыКакСоответствия  - Булево,      - Истина - элементы результата будут преобразованы в соответствия
//                              Строка         с именами свойств в качестве ключей
//                                             <Имя поля> - элементы результата будут преобразованы в соответствия
//                                             со значением указанного поля в качестве ключей ("Имя"|"ИмяРАК")
//                                             Ложь - (по умолчанию) элементы будут возвращены как есть
//
// Возвращаемое значение:
//    Массив - список объектов кластера 1С
//
Функция Список(Отбор = Неопределено, РежимОбновления = 0, ЭлементыКакСоответствия = Ложь) Экспорт

	Возврат Элементы.Список(Отбор, РежимОбновления, ЭлементыКакСоответствия);

КонецФункции // Список()

// Функция возвращает список объектов кластера
//
// Параметры:
//   ПоляИерархии             - Строка       - Поля для построения иерархии списка объектов, разделенные ","
//   РежимОбновления          - Число        - 1 - обновить данные принудительно (вызов RAC)
//                                             0 - обновить данные только по таймеру
//                                            -1 - не обновлять данные
//   ЭлементыКакСоответствия  - Булево,      - Истина - элементы результата будут преобразованы в соответствия
//                              Строка         с именами свойств в качестве ключей
//                                             <Имя поля> - элементы результата будут преобразованы в соответствия
//                                             со значением указанного поля в качестве ключей ("Имя"|"ИмяРАК")
//                                             Ложь - (по умолчанию) элементы будут возвращены как есть
//
// Возвращаемое значение:
//    Соответствие - список объектов кластера 1С
//        <имя поля объекта>    - Массив(Соответствие), Соответствие    - список объектов кластера или следующий уровень
//
Функция ИерархическийСписок(Знач ПоляИерархии, РежимОбновления = 0, ЭлементыКакСоответствия = Ложь) Экспорт

	Возврат Элементы.ИерархическийСписок(ПоляИерархии, РежимОбновления, ЭлементыКакСоответствия);

КонецФункции // ИерархическийСписок()

// Функция возвращает количество обектов в списке профиля безопасности
//
// Возвращаемое значение:
//    Число - количество объектов
//
Функция Количество() Экспорт

	ОбновитьДанные();

	Если Элементы = Неопределено Тогда
		Возврат 0;
	КонецЕсли;
	
	Возврат Элементы.Количество();

КонецФункции // Количество()

// Процедура устанавливает значение периода обновления
//
// Параметры:
//   НовыйПериодОбновления     - Число        - новый период обновления
//
Процедура УстановитьПериодОбновления(НовыйПериодОбновления) Экспорт

	ПериодОбновления = НовыйПериодОбновления;

КонецПроцедуры // УстановитьПериодОбновления()

// Процедура устанавливает новое значение момента актуальности данных
//
Процедура УстановитьАктуальность() Экспорт

	МоментАктуальности = ТекущаяУниверсальнаяДатаВМиллисекундах();

КонецПроцедуры // УстановитьАктуальность()

// Процедура добавляет новый или изменяет существующий объект профиля безопасности
//
// Параметры:
//   Имя                      - Строка     - имя объекта профиля безопасности 1С
//   ПараметрыОбъектаПрофиля  - Структура  - параметры объекта профиля безопасности 1С
//
Процедура Изменить(Имя, ПараметрыОбъектаПрофиля = Неопределено) Экспорт

	Если НЕ ТипЗнч(ПараметрыОбъектаПрофиля) = Тип("Структура") Тогда
		ПараметрыОбъектаПрофиля = Новый Структура();
	КонецЕсли;

	ПараметрыКоманды = Новый Соответствие();
	ПараметрыКоманды.Вставить("СтрокаПодключенияАгента"     , Кластер_Агент.СтрокаПодключения());
	ПараметрыКоманды.Вставить("ИдентификаторКластера"       , Кластер_Владелец.Ид());
	ПараметрыКоманды.Вставить("ПараметрыАвторизацииКластера", Кластер_Владелец.ПараметрыАвторизации());
	ПараметрыКоманды.Вставить("ИмяПрофиля"                  , Профиль_Владелец.Имя());
	ПараметрыКоманды.Вставить("ВидОбъектовПрофиля"          , ТипЭлементов);
	ПараметрыКоманды.Вставить("ИмяОбъектаПрофиля"           , Имя);

	Для Каждого ТекЭлемент Из ПараметрыОбъектаПрофиля Цикл
		ПараметрыКоманды.Вставить(ТекЭлемент.Ключ, ТекЭлемент.Значение);
	КонецЦикла;

	ПараметрыОбъекта.УстановитьЗначенияПараметровКоманд(ПараметрыКоманды);

	КодВозврата = ПараметрыОбъекта.ВыполнитьКоманду("Изменить");
	ВыводКоманды = Кластер_Агент.ВыводКоманды(Ложь);

	Если НЕ КодВозврата = 0 Тогда
		ТекстОшибки = СтрШаблон("Ошибка изменения объекта доступа ""%1"" (%2) профиля ""%3""
		                        | в кластере ""%4"":%5%6",
		                        Имя,
		                        ТипЭлементов,
		                        Профиль_Владелец.Имя(),
		                        Кластер_Владелец.Имя(),
		                        Символы.ПС,
		                        ВыводКоманды);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;

	Лог.Отладка(ВыводКоманды);

	ОбновитьДанные(Перечисления.РежимыОбновленияДанных.Принудительно);

КонецПроцедуры // Изменить()

// Процедура удаляет объект профиля из профиля безопасности
//
// Параметры:
//   Имя            - Строка    - Имя объекта профиля безопасности
//
Процедура Удалить(Имя) Экспорт
	
	ПараметрыКоманды = Новый Соответствие();
	ПараметрыКоманды.Вставить("СтрокаПодключенияАгента"     , Кластер_Агент.СтрокаПодключения());
	ПараметрыКоманды.Вставить("ИдентификаторКластера"       , Кластер_Владелец.Ид());
	ПараметрыКоманды.Вставить("ПараметрыАвторизацииКластера", Кластер_Владелец.ПараметрыАвторизации());
	ПараметрыКоманды.Вставить("ИмяПрофиля"                  , Профиль_Владелец.Имя());
	ПараметрыКоманды.Вставить("ВидОбъектовПрофиля"          , ТипЭлементов);
	ПараметрыКоманды.Вставить("ИмяОбъектаПрофиля"           , Имя);

	ПараметрыОбъекта.УстановитьЗначенияПараметровКоманд(ПараметрыКоманды);

	КодВозврата = ПараметрыОбъекта.ВыполнитьКоманду("Удалить");
	ВыводКоманды = Кластер_Агент.ВыводКоманды(Ложь);

	Если НЕ КодВозврата = 0 Тогда
		ТекстОшибки = СтрШаблон("Ошибка удаления объекта доступа ""%1"" (%2) профиля ""%3""
		                        | в кластере ""%4"":%5%6",
		                        Имя,
		                        ТипЭлементов,
		                        Профиль_Владелец.Имя(),
		                        Кластер_Владелец.Имя(),
		                        Символы.ПС,
		                        ВыводКоманды);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;

	Лог.Отладка(ВыводКоманды);

	ОбновитьДанные(Перечисления.РежимыОбновленияДанных.Принудительно);

КонецПроцедуры // Удалить()
