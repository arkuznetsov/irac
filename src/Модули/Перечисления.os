// ----------------------------------------------------------
// This Source Code Form is subject to the terms of the
// Mozilla Public License, v.2.0. If a copy of the MPL
// was not distributed with this file, You can obtain one
// at http://mozilla.org/MPL/2.0/.
// ----------------------------------------------------------
// Codebase: https://github.com/ArKuznetsov/irac/
// ----------------------------------------------------------

Перем РежимыАдминистрирования Экспорт;                // Перечисление.РежимыАдминистрирования
Перем ВариантыИспользованияРабочегоСервера Экспорт;   // Перечисление.ВариантыИспользованияРабочегоСервера
Перем ВариантыИспользованияМенеджераКластера Экспорт; // Перечисление.ВариантыИспользованияМенеджераКластера
Перем ВариантыРазмещенияСервисов Экспорт;             // Перечисление.ВариантыРазмещенияСервисов
Перем СостоянияВыключателя Экспорт;                   // Перечисление.СостоянияВыключателя
Перем ДаНет Экспорт;                                  // Перечисление.ДаНет
Перем ПраваДоступа Экспорт;                           // Перечисление.ПраваДоступа
Перем РежимыРаспределенияНагрузки Экспорт;            // Перечисление.РежимыРаспределенияНагрузки
Перем СпособыАвторизации Экспорт;                     // Перечисление.СпособыАвторизации
Перем ТипыСУБД Экспорт;                               // Перечисление.ТипыСУБД
Перем Использование Экспорт;                          // Перечисление.Использование
Перем ТипыНазначенияФункциональности Экспорт;         // Перечисление.ТипыНазначенияФункциональности
Перем ОбъектыНазначенияФункциональности Экспорт;      // Перечисление.ОбъектыНазначенияФункциональности
Перем РежимыДоступа Экспорт;                          // Перечисление.РежимыДоступа
Перем ВидыОбъектовПрофиляБезопасности Экспорт;        // Перечисление.ВидыОбъектовПрофиляБезопасности
Перем ДействияСБазойСУБДПриУдалении Экспорт;          // Перечисление.ДействияСБазойСУБДПриУдалении
Перем Приложения Экспорт;                             // Перечисление.Приложения
Перем ТипыГруппировкиСчетчиковРесурсов Экспорт;       // Перечисление.ТипыГруппировкиСчетчиковРесурсов
Перем ТипыОтбораСчетчиковРесурсов Экспорт;            // Перечисление.ТипыОтбораСчетчиковРесурсов
Перем ВремяНакопленияСчетчиковРесурсов Экспорт;       // Перечисление.ВремяНакопленияСчетчиковРесурсов
Перем СостоянияСчетчиковРесурсов Экспорт;             // Перечисление.СостоянияСчетчиковРесурсов
Перем ПоляОтбораСчетчиковРесурсов Экспорт;            // Перечисление.ПоляОтбораСчетчиковРесурсов
Перем ДействияОграниченияРесурсов Экспорт;            // Перечисление.ДействияОграниченияРесурсов
Перем РежимыПотокаСоединения Экспорт;                 // Перечисление.РежимыПотокаСоединения
Перем РежимыСоединенияБД Экспорт;                     // Перечисление.РежимыСоединенияБД
Перем РежимыСоединенияИБ Экспорт;                     // Перечисление.РежимыСоединенияИБ
Перем СпособыПодключения Экспорт;                     // Перечисление.СпособыПодключения
Перем РежимыОбновленияДанных Экспорт;                 // Перечисление.РежимыОбновленияДанных

// Функция возвращает значение перечисления по строковому пути вида "<ИмяПеречисления>.<ЗначениеПеречисления>"
//
// Параметры:
//     ПутьКЗначению   - Строка          - путь к значению перечисления
//
// Возвращаемое значение:
//     Строка          - значение перечисления
//
Функция Значение(Знач ПутьКЗначению) Экспорт

	МассивПеречисления = СтрРазделить(ПутьКЗначению, ".");

	Попытка
		Возврат ЭтотОбъект[МассивПеречисления[0]][МассивПеречисления[1]];
	Исключение
		ВызватьИсключение СтрШаблон("Не найдено значение ""%1"" перечисления ""%2"":%3",
		                            МассивПеречисления[1],
		                            МассивПеречисления[0],
		                            ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;

КонецФункции // Значение()

// Процедура инициализирует значения перечисления "РежимыАдминистрирования"
// из данных макета "ТипыОбъектовКластера.json"
//
Процедура ЗаполнитьРежимыАдминистрирования()

	ДанныеМакета = Служебный.ПрочитатьДанныеИзМакетаJSON("ТипыОбъектовКластера");

	РежимыАдминистрирования = Новый Структура();

	Для Каждого ТекТип Из ДанныеМакета Цикл

		Если НЕ ТекТип.Значение.Свойство("РежимАдминистрирования") Тогда
			Продолжить;
		КонецЕсли;

		РежимыАдминистрирования.Вставить(ТекТип.Ключ, ТекТип.Значение.РежимАдминистрирования);

		Если НЕ (ТипЗнч(ТекТип.Значение) = Тип("Структура") И ТекТип.Значение.Свойство("Свойства")) Тогда
			Продолжить;
		КонецЕсли;

		Для Каждого ТекСвойство Из ТекТип.Значение.Свойства Цикл
			Если НЕ ТекСвойство.Значение.Свойство("РежимАдминистрирования") Тогда
				Продолжить;
			КонецЕсли;
			РежимыАдминистрирования.Вставить(ТекСвойство.Ключ,
			                                 СтрШаблон("%1.%2",
			                                           ТекТип.Значение.РежимАдминистрирования,
			                                           ТекСвойство.Значение.РежимАдминистрирования));
		КонецЦикла;

	КонецЦикла;

	РежимыАдминистрирования = Новый ФиксированнаяСтруктура(РежимыАдминистрирования);

КонецПроцедуры // ЗаполнитьРежимыАдминистрирования()

// Процедура инициализирует значения перечислений
// из данных макета "Перечисления.json"
//
Процедура Инициализация()

	ДанныеМакета = Служебный.ПрочитатьДанныеИзМакетаJSON("Перечисления");

	Для Каждого ТекПеречисление Из ДанныеМакета Цикл
		Попытка
			ЭтотОбъект[ТекПеречисление.Ключ] = Новый Структура();
		Исключение
			ВызватьИсключение СтрШаблон("Не найдено перечисление ""%1"":%2",
			                            ТекПеречисление.Ключ,
			                            ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;
		Для Каждого ТекЗначение Из ТекПеречисление.Значение Цикл
			Попытка
				ЭтотОбъект[ТекПеречисление.Ключ].Вставить(ТекЗначение.Ключ, ТекЗначение.Значение);
			Исключение
				ВызватьИсключение СтрШаблон("Не найдено значение ""%1"" перечисления ""%2"":%3",
				                            ТекЗначение.Ключ,
				                            ТекПеречисление.Ключ,
				                            ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
		КонецЦикла;

		ЭтотОбъект[ТекПеречисление.Ключ] = Новый ФиксированнаяСтруктура(ЭтотОбъект[ТекПеречисление.Ключ]);

	КонецЦикла;

	ЗаполнитьРежимыАдминистрирования();

КонецПроцедуры // Инициализация()

Инициализация();